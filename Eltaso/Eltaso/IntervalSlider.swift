//
//  IntervalSlider.swift
//  Eltaso
//
//  Created by 史　翔新 on 2016/07/19.
//  Copyright © 2016年 Crazism. All rights reserved.
//

import Foundation

open class IntervalSlider: UISlider {
	
	open var interval: Float?
	
	private var onValueChangedAction: ((_ sender: IntervalSlider, _ newValue: Float) -> Void)?
	
	public init(frame: CGRect = .zero, interval: Float? = 1) {
		
		self.interval = interval
		
		super.init(frame: frame)
		
		self.addTarget(self, action: #selector(IntervalSlider.roundValue), for: .valueChanged)
		self.addTarget(self, action: #selector(IntervalSlider.valueChanged(_:)), for: .valueChanged)
		
	}
	
	public required init?(coder aDecoder: NSCoder) {
		self.interval = 1
		super.init(coder: aDecoder)
		self.addTarget(self, action: #selector(IntervalSlider.roundValue), for: .valueChanged)
		self.addTarget(self, action: #selector(IntervalSlider.valueChanged(_:)), for: .valueChanged)
	}
	
}

extension IntervalSlider {
	
	@objc private func roundValue() {
		
		guard let interval = self.interval else {
			return
		}
		
		let newValue = round(self.value / interval) * interval
		self.setValue(newValue, animated: false)
		
	}
	
	@objc private func valueChanged(_ sender: IntervalSlider) {
		self.onValueChangedAction?(sender, self.value)
	}
	
}

extension IntervalSlider {

	open func setOnValueChangedAction(_ action: ((_ sender: IntervalSlider, _ newValue: Float) -> Void)?) {
		
		self.onValueChangedAction = action
		
	}
	
}
